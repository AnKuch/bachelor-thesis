\BOOKMARK [1][]{section*.1}{Abstract}{}% 1
\BOOKMARK [1][]{section*.2}{List of Figures}{}% 2
\BOOKMARK [1][]{section.1}{Introduction}{}% 3
\BOOKMARK [2][]{subsection.1.1}{Motivation}{section.1}% 4
\BOOKMARK [2][]{subsection.1.2}{Aim of the thesis}{section.1}% 5
\BOOKMARK [2][]{subsection.1.3}{Structure of the thesis}{section.1}% 6
\BOOKMARK [1][]{section.2}{Requirements}{}% 7
\BOOKMARK [2][]{subsection.2.1}{The seL4 Microkernel}{section.2}% 8
\BOOKMARK [3][]{subsubsection.2.1.1}{System Calls}{subsection.2.1}% 9
\BOOKMARK [3][]{subsubsection.2.1.2}{Kernel Objects}{subsection.2.1}% 10
\BOOKMARK [3][]{subsubsection.2.1.3}{Memory Allocation Model}{subsection.2.1}% 11
\BOOKMARK [2][]{subsection.2.2}{The Take-Grant Model}{section.2}% 12
\BOOKMARK [3][]{subsubsection.2.2.1}{The Classical Model}{subsection.2.2}% 13
\BOOKMARK [3][]{subsubsection.2.2.2}{Take-Grant specified for the seL4}{subsection.2.2}% 14
\BOOKMARK [2][]{subsection.2.3}{Noninterference}{section.2}% 15
\BOOKMARK [1][]{section.3}{Formalisation of the Take-Grant Model}{}% 16
\BOOKMARK [2][]{subsection.3.1}{Capabilities}{section.3}% 17
\BOOKMARK [2][]{subsection.3.2}{System Operations}{section.3}% 18
\BOOKMARK [1][]{section.4}{Formalisation of the Noninterference Model}{}% 19
\BOOKMARK [1][]{section.5}{Validation of Noninterference}{}% 20
\BOOKMARK [1][]{section.6}{Redesign of the take-grant-model}{}% 21
\BOOKMARK [1][]{section.7}{Validation with the new model}{}% 22
\BOOKMARK [2][]{subsection.7.1}{Create}{section.7}% 23
\BOOKMARK [3][]{subsubsection.7.1.1}{Create on UMO}{subsection.7.1}% 24
\BOOKMARK [3][]{subsubsection.7.1.2}{Create on all other object types inside a domain}{subsection.7.1}% 25
\BOOKMARK [3][]{subsubsection.7.1.3}{Create on Asynchronous IPC Endpoint or Shared Page objects}{subsection.7.1}% 26
\BOOKMARK [2][]{subsection.7.2}{Grant}{section.7}% 27
\BOOKMARK [3][]{subsubsection.7.2.1}{Grant on TCB, SEP, CNode, VSpace or IContr objects}{subsection.7.2}% 28
\BOOKMARK [3][]{subsubsection.7.2.2}{Grant on other objects inside a domain}{subsection.7.2}% 29
\BOOKMARK [3][]{subsubsection.7.2.3}{Grant on Asynchronous IPC Endpoint or Shared Page objects}{subsection.7.2}% 30
\BOOKMARK [2][]{subsection.7.3}{Write}{section.7}% 31
\BOOKMARK [3][]{subsubsection.7.3.1}{Write on TCB, SEP or IHandl objects}{subsection.7.3}% 32
\BOOKMARK [3][]{subsubsection.7.3.2}{Write on objects = TCB, SEP, IHandl, SPage and AEP}{subsection.7.3}% 33
\BOOKMARK [3][]{subsubsection.7.3.3}{Write on AEP or SPage objects from Domain 2}{subsection.7.3}% 34
\BOOKMARK [3][]{subsubsection.7.3.4}{Write on an AEP or SPage object from Domain 1}{subsection.7.3}% 35
\BOOKMARK [2][]{subsection.7.4}{Read}{section.7}% 36
\BOOKMARK [3][]{subsubsection.7.4.1}{Read on TCB or Sychronous IPC Endpoint objects}{subsection.7.4}% 37
\BOOKMARK [3][]{subsubsection.7.4.2}{Read on other object types inside a domain}{subsection.7.4}% 38
\BOOKMARK [3][]{subsubsection.7.4.3}{Read on AEP or SPage objects from Domain 1}{subsection.7.4}% 39
\BOOKMARK [3][]{subsubsection.7.4.4}{Read on AEP or SPage objects from Domain 2}{subsection.7.4}% 40
\BOOKMARK [2][]{subsection.7.5}{Remove}{section.7}% 41
\BOOKMARK [3][]{subsubsection.7.5.1}{Remove on CNode, VSpace or Interrupt Controller objects}{subsection.7.5}% 42
\BOOKMARK [3][]{subsubsection.7.5.2}{Remove on objects = CNode, VSpace and Interrupt Controller}{subsection.7.5}% 43
\BOOKMARK [2][]{subsection.7.6}{Revoke}{section.7}% 44
\BOOKMARK [3][]{subsubsection.7.6.1}{Revoke on CNode or Untyped Memory objects}{subsection.7.6}% 45
\BOOKMARK [3][]{subsubsection.7.6.2}{Revoke on objects = CNode and Untyped Memory}{subsection.7.6}% 46
\BOOKMARK [1][]{section.8}{Conclusion}{}% 47
\BOOKMARK [1][]{section*.37}{References}{}% 48
